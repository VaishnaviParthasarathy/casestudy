package com.target.myRetail.ProductItem;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestTemplate;

import com.target.ProductDetails.ProductDetails;

@RestController
@RequestMapping(value="/productDetails")
public class ProductDetailController {
	

	@Value("${externalapi.path}")
	private String externalAPIPath;
	
	@GetMapping(value="/{id}")
	public String getProductNameById(@PathVariable("id") String id) {
		
		
		 RestTemplate restTemplate = new RestTemplate();
		
		
		 //ProductDetails productDetail = restTemplate.getForObject(externalAPIPath, 
			//	 ProductDetails.class,id);
		 
		 //restTemplate.exchange(requestEntity, responseType)
		 //ResponseEntity<ProductDetails> getResponse = restTemplate.exchange(externalAPIPath,HttpMethod.GET, null,ProductDetails.class,id);
		 try{
		 
		 ResponseEntity<ProductDetails> getResponse=restTemplate.getForEntity(externalAPIPath,ProductDetails.class,id);
		 
		 if(getResponse.getStatusCode().is2xxSuccessful()){
				
			 ProductDetails productDetail=getResponse.getBody();
			 return productDetail.getProduct().getItem().getProductDescription().getTitle();
		 }
		 
		 }catch (HttpClientErrorException | HttpServerErrorException httpClientOrServerExc) {

			    if(HttpStatus.NOT_FOUND.equals(httpClientOrServerExc.getStatusCode())) {
			    	
			    	return null;
			    }
			    else
			    {
			    	return null;
			    }
			}
		return null;
		
		 
		
	        
	}

}
